Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 96.49      1.65     1.65 12335400     0.00     0.00  DIST2_ImageNonOrtho(Vec3 const&, Vec3 const&, Matrix_3x3 const&, Matrix_3x3 const&)
  2.92      1.70     0.05       10     5.00   170.00  Action_Closest::Action_ImageNonOrtho(Frame&, double, Matrix_3x3, Matrix_3x3)
  0.58      1.71     0.01    18672     0.00     0.00  Action_Closest::Setup(Topology const&, CoordinateInfo const&)
  0.00      1.71     0.00   137276     0.00     0.00  std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  0.00      1.71     0.00   119480     0.00     0.00  FileIO_Std::Gets(char*, int)
  0.00      1.71     0.00   116683     0.00     0.00  std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&)
  0.00      1.71     0.00   115245     0.00     0.00  NameType::NameType(NameType const&)
  0.00      1.71     0.00    30297     0.00     0.00  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&)
  0.00      1.71     0.00    23686     0.00     0.00  Topology::AtomDistance(int, int, int, std::set<int, std::less<int>, std::allocator<int> >&) const
  0.00      1.71     0.00    23308     0.00     0.00  NameType::operator[](int) const
  0.00      1.71     0.00    19364     0.00     0.00  NameType::NameType(char const*)
  0.00      1.71     0.00    14018     0.00     0.00  Atom::Atom(Atom const&)
  0.00      1.71     0.00    14018     0.00     0.00  Atom::~Atom()
  0.00      1.71     0.00    12222     0.00     0.00  std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00      1.71     0.00     5828     0.00     0.00  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
  0.00      1.71     0.00     5827     0.00     0.00  Atom::AddExclusionList(std::set<int, std::less<int>, std::allocator<int> > const&)
  0.00      1.71     0.00     5827     0.00     0.00  Atom::SetElementFromMass()
  0.00      1.71     0.00     5827     0.00     0.00  Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double)
  0.00      1.71     0.00     5827     0.00     0.00  Topology::AddTopAtom(Atom const&, Residue const&)
  0.00      1.71     0.00     1873     0.00     0.00  NameType::operator==(char const*) const
  0.00      1.71     0.00     1870     0.00     0.00  Topology::VisitAtom(int, int)
  0.00      1.71     0.00     1869     0.00     0.00  AtomMask::AddAtomRange(int, int)
  0.00      1.71     0.00     1869     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long)
  0.00      1.71     0.00      550     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp)
  0.00      1.71     0.00      117     0.00     0.00  mprintf(char const*, ...)
  0.00      1.71     0.00       46     0.00     0.00  Parm_Amber::PositionFileAtFlag(char const*)
  0.00      1.71     0.00       41     0.00     0.00  FileIO_Std::Read(void*, unsigned long)
  0.00      1.71     0.00       40     0.00     0.00  NetcdfFile::checkNCerr(int)
  0.00      1.71     0.00       38     0.00     0.00  Parm_Amber::SetFortranType()
  0.00      1.71     0.00       38     0.00     0.00  Parm_Amber::AllocateAndRead(int, int, int)
  0.00      1.71     0.00       24     0.00     0.00  std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
  0.00      1.71     0.00       20     0.00     0.00  Matrix_3x3::Matrix_3x3(Matrix_3x3 const&)
  0.00      1.71     0.00       20     0.00     0.00  Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int)
  0.00      1.71     0.00       20     0.00     0.00  Parm_Amber::GetDouble(int, int, int)
  0.00      1.71     0.00       17     0.00     0.00  Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int)
  0.00      1.71     0.00       16     0.00     0.00  FileIO_Std::Close()
  0.00      1.71     0.00       14     0.00     0.00  Parm_Amber::GetInteger(int, int, int)
  0.00      1.71     0.00       14     0.00     0.00  std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&)
  0.00      1.71     0.00       12     0.00     0.00  std::vector<Residue, std::allocator<Residue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Residue*, std::vector<Residue, std::allocator<Residue> > >, Residue const&)
  0.00      1.71     0.00       10     0.00     0.00  FileIO_Std::Rewind()
  0.00      1.71     0.00       10     0.00     0.00  NetcdfFile::FloatToDouble(double*, float const*)
  0.00      1.71     0.00       10     0.00     0.00  Box::ToRecip(Matrix_3x3&, Matrix_3x3&) const
  0.00      1.71     0.00       10     0.00     0.01  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp)
  0.00      1.71     0.00        8     0.00     0.00  FileIO_Std::Open(char const*, char const*)
  0.00      1.71     0.00        7     0.00     0.00  std::vector<NameType, std::allocator<NameType> >::operator=(std::vector<NameType, std::allocator<NameType> > const&)
  0.00      1.71     0.00        6     0.00     0.00  FileIO_Std::FileIO_Std()
  0.00      1.71     0.00        6     0.00     0.00  FileIO_Std::~FileIO_Std()
  0.00      1.71     0.00        5     0.00     0.00  Box::Box()
  0.00      1.71     0.00        5     0.00     0.00  FileName::operator=(FileName const&)
  0.00      1.71     0.00        4     0.00     0.00  Parm_Amber::GetName(int, int, int)
  0.00      1.71     0.00        4     0.00     0.00  ArgList::hasKey(char const*)
  0.00      1.71     0.00        4     0.00     0.00  std::_Deque_base<char, std::allocator<char> >::_M_initialize_map(unsigned long)
  0.00      1.71     0.00        4     0.00     0.00  std::vector<NameType, std::allocator<NameType> >::reserve(unsigned long)
  0.00      1.71     0.00        3     0.00     0.00  convertToInteger(std::string const&)
  0.00      1.71     0.00        3     0.00     0.00  FileIO_Std::Size(char const*)
  0.00      1.71     0.00        3     0.00     0.00  NetcdfFile::GetAttrText(int, char const*)
  0.00      1.71     0.00        3     0.00     0.00  CpptrajFile::ID_Type(char const*)
  0.00      1.71     0.00        3     0.00     0.00  File::Exists(FileName const&)
  0.00      1.71     0.00        3     0.00     0.00  FileName::clear()
  0.00      1.71     0.00        3     0.00     0.00  NameType::NameType()
  0.00      1.71     0.00        3     0.00     0.00  std::vector<DihedralType, std::allocator<DihedralType> >::operator=(std::vector<DihedralType, std::allocator<DihedralType> > const&)
  0.00      1.71     0.00        3     0.00     0.00  std::vector<BondType, std::allocator<BondType> >::operator=(std::vector<BondType, std::allocator<BondType> > const&)
  0.00      1.71     0.00        3     0.00     0.00  std::vector<NameType, std::allocator<NameType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<NameType*, std::vector<NameType, std::allocator<NameType> > >, unsigned long, NameType const&)
  0.00      1.71     0.00        3     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00      1.71     0.00        2     0.00     0.00  RemoveTrailingWhitespace(std::string&)
  0.00      1.71     0.00        2     0.00     0.00  BondIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&)
  0.00      1.71     0.00        2     0.00     0.00  AngleIndexToArray(std::vector<int, std::allocator<int> > const&, int&)
  0.00      1.71     0.00        2     0.00     0.00  DihedralIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&)
  0.00      1.71     0.00        2     0.00     0.00  NetcdfFile::GetAttrText(char const*)
  0.00      1.71     0.00        2     0.00     0.00  NetcdfFile::NC_openRead(std::string const&)
  0.00      1.71     0.00        2     0.00     0.00  NetcdfFile::GetNetcdfConventions()
  0.00      1.71     0.00        2     0.00     0.00  NetcdfFile::NC_close()
  0.00      1.71     0.00        2     0.00     0.00  Parm_Amber::GetFlagName(Parm_Amber::AmberParmFlagType, int)
  0.00      1.71     0.00        2     0.00     0.00  CpptrajFile::OpenFile(CpptrajFile::AccessType)
  0.00      1.71     0.00        2     0.00     0.00  CpptrajFile::CloseFile()
  0.00      1.71     0.00        2     0.00     0.00  Box::operator=(Box const&)
  0.00      1.71     0.00        2     0.00     0.00  ArgList::SetList(std::string const&, char const*)
  0.00      1.71     0.00        2     0.00     0.00  FileName::SetFileName(std::string const&)
  0.00      1.71     0.00        2     0.00     0.00  FileName::SetFileName_NoExpansion(std::string const&)
  0.00      1.71     0.00        2     0.00     0.00  AtomMask::Nselected() const
  0.00      1.71     0.00        2     0.00     0.00  std::_Deque_base<char*, std::allocator<char*> >::_M_initialize_map(unsigned long)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<NonbondType, std::allocator<NonbondType> >::operator=(std::vector<NonbondType, std::allocator<NonbondType> > const&)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<BondParmType, std::allocator<BondParmType> >::operator=(std::vector<BondParmType, std::allocator<BondParmType> > const&)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<DihedralType, std::allocator<DihedralType> >::reserve(unsigned long)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<DihedralParmType, std::allocator<DihedralParmType> >::operator=(std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<AngleType, std::allocator<AngleType> >::operator=(std::vector<AngleType, std::allocator<AngleType> > const&)
  0.00      1.71     0.00        2     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
  0.00      1.71     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10Parm_Amber13AMBERPOINTERSE
  0.00      1.71     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7ArgList11emptystringE
  0.00      1.71     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8Topology8LJ_EMPTYE
  0.00      1.71     0.00        1     0.00     0.00  validInteger(std::string const&)
  0.00      1.71     0.00        1     0.00     0.00  BondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, int&)
  0.00      1.71     0.00        1     0.00     0.00  NonbondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupMultiD(ReplicaDimArray&)
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupFrameDim()
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupCoordsVelo(bool)
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupTemperature()
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::GetNetcdfConventions(char const*)
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupBox(double*, NetcdfFile::NCTYPE)
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::SetupTime()
  0.00      1.71     0.00        1     0.00     0.00  NetcdfFile::NetcdfFile()
  0.00      1.71     0.00        1     0.00     0.00  Parm_Amber::ReadAmberParm(Topology&)
  0.00      1.71     0.00        1     0.00     0.00  CpptrajFile::OpenRead(FileName const&)
  0.00      1.71     0.00        1     0.00     0.00  CpptrajFile::CpptrajFile()
  0.00      1.71     0.00        1     0.00     0.00  CpptrajFile::~CpptrajFile()
  0.00      1.71     0.00        1     0.00     0.00  MaskTokenArray::SetMaskString(std::string const&)
  0.00      1.71     0.00        1     0.00     0.00  MaskTokenArray::Tokenize()
  0.00      1.71     0.00        1     0.00     0.00  Box::SetBetaLengths(double, double, double, double)
  0.00      1.71     0.00        1     0.00     0.00  Box::Box(double const*)
  0.00      1.71     0.00        1     0.00     0.00  Box::Box(Box const&)
  0.00      1.71     0.00        1     0.00     0.00  Frame::Frame()
  0.00      1.71     0.00        1     0.00     0.00  Frame::~Frame()
  0.00      1.71     0.00        1     0.00     0.00  ArgList::GetMaskNext()
  0.00      1.71     0.00        1     0.00     0.00  ArgList::getNextInteger(int)
  0.00      1.71     0.00        1     0.00     0.00  ArgList::ArgList(std::string const&, char const*)
  0.00      1.71     0.00        1     0.00     0.00  AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetParmName(std::string const&, FileName const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetNonbondInfo(NonbondParmType const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetSolventInfo()
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetExtraAtomInfo(int, std::vector<AtomExtra, std::allocator<AtomExtra> > const&)
  0.00      1.71     0.00        1     0.00     0.00  Topology::DetermineMolecules()
  0.00      1.71     0.00        1     0.00     0.00  Topology::DetermineExcludedAtoms()
  0.00      1.71     0.00        1     0.00     0.00  MaskToken::SetToken(MaskToken::MaskTokenType, std::string const&)
  0.00      1.71     0.00        1     0.00     0.00  MaskTokenArray::MaskInfo() const
  0.00      1.71     0.00        1     0.00     0.00  MaskTokenArray::ParseMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) const
  0.00      1.71     0.00        1     0.00     0.00  Topology::SetupIntegerMask(AtomMask&) const
  0.00      1.71     0.00        1     0.00     0.00  std::vector<HB_ParmType, std::allocator<HB_ParmType> >::operator=(std::vector<HB_ParmType, std::allocator<HB_ParmType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<CmapGridType, std::allocator<CmapGridType> >::operator=(std::vector<CmapGridType, std::allocator<CmapGridType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<AngleParmType, std::allocator<AngleParmType> >::operator=(std::vector<AngleParmType, std::allocator<AngleParmType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<DihedralParmType, std::allocator<DihedralParmType> >::reserve(unsigned long)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<CmapType, std::allocator<CmapType> >::operator=(std::vector<CmapType, std::allocator<CmapType> > const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<Molecule, std::allocator<Molecule> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Molecule*, std::vector<Molecule, std::allocator<Molecule> > >, unsigned long, Molecule const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<AtomExtra, std::allocator<AtomExtra> >::reserve(unsigned long)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<AtomExtra, std::allocator<AtomExtra> >::operator=(std::vector<AtomExtra, std::allocator<AtomExtra> > const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<MaskToken, std::allocator<MaskToken> >::_M_insert_aux(__gnu_cxx::__normal_iterator<MaskToken*, std::vector<MaskToken, std::allocator<MaskToken> > >, MaskToken const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, unsigned long, Action_Closest::MolDist const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::_M_fill_assign(unsigned long, double const&)
  0.00      1.71     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.58% of 1.71 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.71                 Action_Closest::DoAction(int, Frame&) [1]
                0.05    1.65      10/10          Action_Closest::Action_ImageNonOrtho(Frame&, double, Matrix_3x3, Matrix_3x3) [2]
                0.01    0.00   18540/18672       Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
                0.00    0.00      10/10          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp) [5]
                0.00    0.00     100/117         mprintf(char const*, ...) [34]
                0.00    0.00      20/20          Matrix_3x3::Matrix_3x3(Matrix_3x3 const&) [41]
                0.00    0.00      10/10          Box::ToRecip(Matrix_3x3&, Matrix_3x3&) const [51]
-----------------------------------------------
                0.05    1.65      10/10          Action_Closest::DoAction(int, Frame&) [1]
[2]     99.4    0.05    1.65      10         Action_Closest::Action_ImageNonOrtho(Frame&, double, Matrix_3x3, Matrix_3x3) [2]
                1.65    0.00 12335400/12335400     DIST2_ImageNonOrtho(Vec3 const&, Vec3 const&, Matrix_3x3 const&, Matrix_3x3 const&) [3]
-----------------------------------------------
                1.65    0.00 12335400/12335400     Action_Closest::Action_ImageNonOrtho(Frame&, double, Matrix_3x3, Matrix_3x3) [2]
[3]     96.5    1.65    0.00 12335400         DIST2_ImageNonOrtho(Vec3 const&, Vec3 const&, Matrix_3x3 const&, Matrix_3x3 const&) [3]
-----------------------------------------------
                                2095             Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
                0.00    0.00     132/18672       void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp) [5]
                0.01    0.00   18540/18672       Action_Closest::DoAction(int, Frame&) [1]
[4]      0.6    0.01    0.00   18672+2095    Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
                0.00    0.00  132994/137276      std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
                0.00    0.00  114428/116683      std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&) [15]
                0.00    0.00    1869/1869        AtomMask::AddAtomRange(int, int) [31]
                0.00    0.00     550/550         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp) [33]
                0.00    0.00       3/117         mprintf(char const*, ...) [34]
                0.00    0.00       1/1           AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) [124]
                0.00    0.00       1/1           Topology::SetupIntegerMask(AtomMask&) const [137]
                0.00    0.00       1/2           AtomMask::Nselected() const [88]
                0.00    0.00       1/1           MaskTokenArray::MaskInfo() const [135]
                0.00    0.00       1/1           std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, unsigned long, Action_Closest::MolDist const&) [147]
                                2095             Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
-----------------------------------------------
                0.00    0.00      10/10          Action_Closest::DoAction(int, Frame&) [1]
[5]      0.0    0.00    0.00      10         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp) [5]
                0.00    0.00     132/18672       Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
                0.00    0.00      92/116683      std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&) [15]
                0.00    0.00      36/137276      std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
-----------------------------------------------
                0.00    0.00       2/137276      Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00      14/137276      Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
                0.00    0.00      36/137276      void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp) [5]
                0.00    0.00    4230/137276      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp) [33]
                0.00    0.00  132994/137276      Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[13]     0.0    0.00    0.00  137276         std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
-----------------------------------------------
                0.00    0.00       2/119480      Parm_Amber::ID_ParmFormat(CpptrajFile&) [218]
                0.00    0.00       2/119480      Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       3/119480      CpptrajFile::ID_Type(char const*) [65]
                0.00    0.00  119473/119480      Parm_Amber::PositionFileAtFlag(char const*) [35]
[14]     0.0    0.00    0.00  119480         FileIO_Std::Gets(char*, int) [14]
-----------------------------------------------
                0.00    0.00      92/116683      void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp) [5]
                0.00    0.00    2163/116683      void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp) [33]
                0.00    0.00  114428/116683      Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[15]     0.0    0.00    0.00  116683         std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&) [15]
-----------------------------------------------
                0.00    0.00       1/115245      std::vector<MaskToken, std::allocator<MaskToken> >::_M_insert_aux(__gnu_cxx::__normal_iterator<MaskToken*, std::vector<MaskToken, std::allocator<MaskToken> > >, MaskToken const&) [146]
                0.00    0.00    1870/115245      Topology::AddTopAtom(Atom const&, Residue const&) [28]
                0.00    0.00    2059/115245      std::vector<Residue, std::allocator<Residue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Residue*, std::vector<Residue, std::allocator<Residue> > >, Residue const&) [48]
                0.00    0.00    5827/115245      std::vector<AtomExtra, std::allocator<AtomExtra> >::operator=(std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [145]
                0.00    0.00    9591/115245      std::vector<NameType, std::allocator<NameType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<NameType*, std::vector<NameType, std::allocator<NameType> > >, unsigned long, NameType const&) [71]
                0.00    0.00   11654/115245      Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double) [27]
                0.00    0.00   17481/115245      Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00   19363/115245      Parm_Amber::GetName(int, int, int) [58]
                0.00    0.00   19363/115245      std::vector<NameType, std::allocator<NameType> >::operator=(std::vector<NameType, std::allocator<NameType> > const&) [53]
                0.00    0.00   28036/115245      Atom::Atom(Atom const&) [21]
[16]     0.0    0.00    0.00  115245         NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00    5834/30297       Topology::DetermineExcludedAtoms() [133]
                0.00    0.00   24463/30297       Topology::AtomDistance(int, int, int, std::set<int, std::less<int>, std::allocator<int> >&) const [18]
[17]     0.0    0.00    0.00   30297         std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&) [17]
-----------------------------------------------
                0.00    0.00   23686/23686       Topology::DetermineExcludedAtoms() [133]
[18]     0.0    0.00    0.00   23686         Topology::AtomDistance(int, int, int, std::set<int, std::less<int>, std::allocator<int> >&) const [18]
                0.00    0.00   24463/30297       std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&) [17]
-----------------------------------------------
                0.00    0.00    5827/23308       Atom::SetElementFromMass() [26]
                0.00    0.00   17481/23308       Parm_Amber::ReadAmberParm(Topology&) [110]
[19]     0.0    0.00    0.00   23308         NameType::operator[](int) const [19]
-----------------------------------------------
                0.00    0.00       1/19364       MaskTokenArray::Tokenize() [115]
                0.00    0.00   19363/19364       Parm_Amber::GetName(int, int, int) [58]
[20]     0.0    0.00    0.00   19364         NameType::NameType(char const*) [20]
-----------------------------------------------
                0.00    0.00    5813/14018       Topology::AddTopAtom(Atom const&, Residue const&) [28]
                0.00    0.00    8205/14018       std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&) [47]
[21]     0.0    0.00    0.00   14018         Atom::Atom(Atom const&) [21]
                0.00    0.00   28036/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00    5827/14018       Topology::~Topology() [424]
                0.00    0.00    8191/14018       std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&) [47]
[22]     0.0    0.00    0.00   14018         Atom::~Atom() [22]
-----------------------------------------------
                0.00    0.00       9/12222       AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) [124]
                0.00    0.00      13/12222       Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00     246/12222       Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [125]
                0.00    0.00    5607/12222       AtomMask::AddAtomRange(int, int) [31]
                0.00    0.00    6347/12222       Atom::AddExclusionList(std::set<int, std::less<int>, std::allocator<int> > const&) [25]
[23]     0.0    0.00    0.00   12222         std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
-----------------------------------------------
                0.00    0.00    5828/5828        Topology::DetermineExcludedAtoms() [133]
[24]     0.0    0.00    0.00    5828         std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [24]
-----------------------------------------------
                0.00    0.00    5827/5827        Topology::DetermineExcludedAtoms() [133]
[25]     0.0    0.00    0.00    5827         Atom::AddExclusionList(std::set<int, std::less<int>, std::allocator<int> > const&) [25]
                0.00    0.00    6347/12222       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
-----------------------------------------------
                0.00    0.00    5827/5827        Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double) [27]
[26]     0.0    0.00    0.00    5827         Atom::SetElementFromMass() [26]
                0.00    0.00    5827/23308       NameType::operator[](int) const [19]
-----------------------------------------------
                0.00    0.00    5827/5827        Parm_Amber::ReadAmberParm(Topology&) [110]
[27]     0.0    0.00    0.00    5827         Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double) [27]
                0.00    0.00   11654/115245      NameType::NameType(NameType const&) [16]
                0.00    0.00    5827/5827        Atom::SetElementFromMass() [26]
-----------------------------------------------
                0.00    0.00    5827/5827        Parm_Amber::ReadAmberParm(Topology&) [110]
[28]     0.0    0.00    0.00    5827         Topology::AddTopAtom(Atom const&, Residue const&) [28]
                0.00    0.00    5813/14018       Atom::Atom(Atom const&) [21]
                0.00    0.00    1870/115245      NameType::NameType(NameType const&) [16]
                0.00    0.00      14/14          std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&) [47]
                0.00    0.00      12/12          std::vector<Residue, std::allocator<Residue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Residue*, std::vector<Residue, std::allocator<Residue> > >, Residue const&) [48]
-----------------------------------------------
                0.00    0.00    1873/1873        Topology::SetSolventInfo() [129]
[29]     0.0    0.00    0.00    1873         NameType::operator==(char const*) const [29]
-----------------------------------------------
                                  56             Topology::VisitAtom(int, int) [30]
                0.00    0.00    1870/1870        Topology::DetermineMolecules() [132]
[30]     0.0    0.00    0.00    1870+56      Topology::VisitAtom(int, int) [30]
                                  56             Topology::VisitAtom(int, int) [30]
-----------------------------------------------
                0.00    0.00    1869/1869        Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[31]     0.0    0.00    0.00    1869         AtomMask::AddAtomRange(int, int) [31]
                0.00    0.00    5607/12222       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
                0.00    0.00    1869/1869        void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long) [32]
-----------------------------------------------
                0.00    0.00    1869/1869        AtomMask::AddAtomRange(int, int) [31]
[32]     0.0    0.00    0.00    1869         void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long) [32]
-----------------------------------------------
                0.00    0.00     550/550         Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[33]     0.0    0.00    0.00     550         void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp) [33]
                0.00    0.00    4230/137276      std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
                0.00    0.00    2163/116683      std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&) [15]
-----------------------------------------------
                0.00    0.00       1/117         Action_Closest::Init(ArgList&, int) [258]
                0.00    0.00       1/117         Traj_AmberNetcdf::Info() [276]
                0.00    0.00       2/117         Frame::Info(char const*) const [460]
                0.00    0.00       3/117         Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
                0.00    0.00      10/117         Topology::Summary() const [520]
                0.00    0.00     100/117         Action_Closest::DoAction(int, Frame&) [1]
[34]     0.0    0.00    0.00     117         mprintf(char const*, ...) [34]
-----------------------------------------------
                0.00    0.00       2/46          Parm_Amber::GetFlagName(Parm_Amber::AmberParmFlagType, int) [81]
                0.00    0.00       7/46          Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00      17/46          Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
                0.00    0.00      20/46          Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
[35]     0.0    0.00    0.00      46         Parm_Amber::PositionFileAtFlag(char const*) [35]
                0.00    0.00  119473/119480      FileIO_Std::Gets(char*, int) [14]
                0.00    0.00      10/10          FileIO_Std::Rewind() [49]
-----------------------------------------------
                0.00    0.00       3/41          CpptrajFile::ID_Type(char const*) [65]
                0.00    0.00      38/41          Parm_Amber::AllocateAndRead(int, int, int) [39]
[36]     0.0    0.00    0.00      41         FileIO_Std::Read(void*, unsigned long) [36]
-----------------------------------------------
                0.00    0.00      40/40          Traj_AmberNetcdf::readFrame(int, Frame&) [281]
[37]     0.0    0.00    0.00      40         NetcdfFile::checkNCerr(int) [37]
-----------------------------------------------
                0.00    0.00       4/38          Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00      14/38          Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
                0.00    0.00      20/38          Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
[38]     0.0    0.00    0.00      38         Parm_Amber::SetFortranType() [38]
-----------------------------------------------
                0.00    0.00       4/38          Parm_Amber::GetName(int, int, int) [58]
                0.00    0.00      14/38          Parm_Amber::GetInteger(int, int, int) [46]
                0.00    0.00      20/38          Parm_Amber::GetDouble(int, int, int) [43]
[39]     0.0    0.00    0.00      38         Parm_Amber::AllocateAndRead(int, int, int) [39]
                0.00    0.00      38/41          FileIO_Std::Read(void*, unsigned long) [36]
-----------------------------------------------
                0.00    0.00       4/24          Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00      20/24          Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
[40]     0.0    0.00    0.00      24         std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [40]
-----------------------------------------------
                0.00    0.00      20/20          Action_Closest::DoAction(int, Frame&) [1]
[41]     0.0    0.00    0.00      20         Matrix_3x3::Matrix_3x3(Matrix_3x3 const&) [41]
-----------------------------------------------
                0.00    0.00      20/20          Parm_Amber::ReadAmberParm(Topology&) [110]
[42]     0.0    0.00    0.00      20         Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
                0.00    0.00      20/46          Parm_Amber::PositionFileAtFlag(char const*) [35]
                0.00    0.00      20/38          Parm_Amber::SetFortranType() [38]
                0.00    0.00      20/20          Parm_Amber::GetDouble(int, int, int) [43]
                0.00    0.00      20/24          std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [40]
-----------------------------------------------
                0.00    0.00      20/20          Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
[43]     0.0    0.00    0.00      20         Parm_Amber::GetDouble(int, int, int) [43]
                0.00    0.00      20/38          Parm_Amber::AllocateAndRead(int, int, int) [39]
-----------------------------------------------
                0.00    0.00      17/17          Parm_Amber::ReadAmberParm(Topology&) [110]
[44]     0.0    0.00    0.00      17         Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
                0.00    0.00      17/46          Parm_Amber::PositionFileAtFlag(char const*) [35]
                0.00    0.00      14/38          Parm_Amber::SetFortranType() [38]
                0.00    0.00      14/14          Parm_Amber::GetInteger(int, int, int) [46]
                0.00    0.00      14/137276      std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
-----------------------------------------------
                0.00    0.00       2/16          CpptrajFile::CloseFile() [83]
                0.00    0.00       6/16          CpptrajFile::ID_Type(char const*) [65]
                0.00    0.00       8/16          FileIO_Std::Open(char const*, char const*) [52]
[45]     0.0    0.00    0.00      16         FileIO_Std::Close() [45]
-----------------------------------------------
                0.00    0.00      14/14          Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
[46]     0.0    0.00    0.00      14         Parm_Amber::GetInteger(int, int, int) [46]
                0.00    0.00      14/38          Parm_Amber::AllocateAndRead(int, int, int) [39]
-----------------------------------------------
                0.00    0.00      14/14          Topology::AddTopAtom(Atom const&, Residue const&) [28]
[47]     0.0    0.00    0.00      14         std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&) [47]
                0.00    0.00    8205/14018       Atom::Atom(Atom const&) [21]
                0.00    0.00    8191/14018       Atom::~Atom() [22]
-----------------------------------------------
                0.00    0.00      12/12          Topology::AddTopAtom(Atom const&, Residue const&) [28]
[48]     0.0    0.00    0.00      12         std::vector<Residue, std::allocator<Residue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Residue*, std::vector<Residue, std::allocator<Residue> > >, Residue const&) [48]
                0.00    0.00    2059/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00      10/10          Parm_Amber::PositionFileAtFlag(char const*) [35]
[49]     0.0    0.00    0.00      10         FileIO_Std::Rewind() [49]
-----------------------------------------------
                0.00    0.00      10/10          Traj_AmberNetcdf::readFrame(int, Frame&) [281]
[50]     0.0    0.00    0.00      10         NetcdfFile::FloatToDouble(double*, float const*) [50]
-----------------------------------------------
                0.00    0.00      10/10          Action_Closest::DoAction(int, Frame&) [1]
[51]     0.0    0.00    0.00      10         Box::ToRecip(Matrix_3x3&, Matrix_3x3&) const [51]
-----------------------------------------------
                0.00    0.00       2/8           CpptrajFile::OpenFile(CpptrajFile::AccessType) [82]
                0.00    0.00       6/8           CpptrajFile::ID_Type(char const*) [65]
[52]     0.0    0.00    0.00       8         FileIO_Std::Open(char const*, char const*) [52]
                0.00    0.00       8/16          FileIO_Std::Close() [45]
-----------------------------------------------
                0.00    0.00       7/7           Parm_Amber::ReadAmberParm(Topology&) [110]
[53]     0.0    0.00    0.00       7         std::vector<NameType, std::allocator<NameType> >::operator=(std::vector<NameType, std::allocator<NameType> > const&) [53]
                0.00    0.00   19363/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00       6/6           CpptrajFile::ID_Type(char const*) [65]
[54]     0.0    0.00    0.00       6         FileIO_Std::FileIO_Std() [54]
-----------------------------------------------
                0.00    0.00       1/6           CpptrajFile::SetupRead(FileName const&, int) [250]
                0.00    0.00       2/6           CpptrajFile::~CpptrajFile() [113]
                0.00    0.00       3/6           CpptrajFile::ID_Type(char const*) [65]
[55]     0.0    0.00    0.00       6         FileIO_Std::~FileIO_Std() [55]
-----------------------------------------------
                0.00    0.00       1/5           Topology::Topology() [423]
                0.00    0.00       1/5           Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       1/5           Traj_AmberNetcdf::Traj_AmberNetcdf() [282]
                0.00    0.00       2/5           Frame::Frame() [119]
[56]     0.0    0.00    0.00       5         Box::Box() [56]
-----------------------------------------------
                0.00    0.00       1/5           Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       1/5           CpptrajFile::OpenRead(FileName const&) [111]
                0.00    0.00       1/5           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
                0.00    0.00       2/5           CpptrajFile::SetupRead(FileName const&, int) [250]
[57]     0.0    0.00    0.00       5         FileName::operator=(FileName const&) [57]
-----------------------------------------------
                0.00    0.00       4/4           Parm_Amber::ReadAmberParm(Topology&) [110]
[58]     0.0    0.00    0.00       4         Parm_Amber::GetName(int, int, int) [58]
                0.00    0.00   19363/19364       NameType::NameType(char const*) [20]
                0.00    0.00   19363/115245      NameType::NameType(NameType const&) [16]
                0.00    0.00       4/38          Parm_Amber::AllocateAndRead(int, int, int) [39]
                0.00    0.00       4/4           std::vector<NameType, std::allocator<NameType> >::reserve(unsigned long) [61]
-----------------------------------------------
                0.00    0.00       4/4           Action_Closest::Init(ArgList&, int) [258]
[59]     0.0    0.00    0.00       4         ArgList::hasKey(char const*) [59]
-----------------------------------------------
                0.00    0.00       4/4           MaskTokenArray::Tokenize() [115]
[60]     0.0    0.00    0.00       4         std::_Deque_base<char, std::allocator<char> >::_M_initialize_map(unsigned long) [60]
-----------------------------------------------
                0.00    0.00       4/4           Parm_Amber::GetName(int, int, int) [58]
[61]     0.0    0.00    0.00       4         std::vector<NameType, std::allocator<NameType> >::reserve(unsigned long) [61]
-----------------------------------------------
                0.00    0.00       1/3           ArgList::getNextInteger(int) [122]
                0.00    0.00       2/3           MaskToken::SetToken(MaskToken::MaskTokenType, std::string const&) [134]
[62]     0.0    0.00    0.00       3         convertToInteger(std::string const&) [62]
-----------------------------------------------
                0.00    0.00       3/3           CpptrajFile::ID_Type(char const*) [65]
[63]     0.0    0.00    0.00       3         FileIO_Std::Size(char const*) [63]
-----------------------------------------------
                0.00    0.00       1/3           NetcdfFile::GetNetcdfConventions(char const*) [106]
                0.00    0.00       1/3           NetcdfFile::SetupCoordsVelo(bool) [104]
                0.00    0.00       1/3           NetcdfFile::SetupTime() [108]
[64]     0.0    0.00    0.00       3         NetcdfFile::GetAttrText(int, char const*) [64]
-----------------------------------------------
                0.00    0.00       1/3           CpptrajFile::OpenRead(FileName const&) [111]
                0.00    0.00       2/3           CpptrajFile::SetupRead(FileName const&, int) [250]
[65]     0.0    0.00    0.00       3         CpptrajFile::ID_Type(char const*) [65]
                0.00    0.00       6/6           FileIO_Std::FileIO_Std() [54]
                0.00    0.00       6/8           FileIO_Std::Open(char const*, char const*) [52]
                0.00    0.00       6/16          FileIO_Std::Close() [45]
                0.00    0.00       3/41          FileIO_Std::Read(void*, unsigned long) [36]
                0.00    0.00       3/6           FileIO_Std::~FileIO_Std() [55]
                0.00    0.00       3/3           FileIO_Std::Size(char const*) [63]
                0.00    0.00       3/119480      FileIO_Std::Gets(char*, int) [14]
-----------------------------------------------
                0.00    0.00       1/3           CpptrajFile::OpenRead(FileName const&) [111]
                0.00    0.00       2/3           CpptrajFile::SetupRead(FileName const&, int) [250]
[66]     0.0    0.00    0.00       3         File::Exists(FileName const&) [66]
-----------------------------------------------
                0.00    0.00       1/3           CpptrajFile::OpenRead(FileName const&) [111]
                0.00    0.00       2/3           CpptrajFile::SetupRead(FileName const&, int) [250]
[67]     0.0    0.00    0.00       3         FileName::clear() [67]
-----------------------------------------------
                0.00    0.00       3/3           Parm_Amber::ReadAmberParm(Topology&) [110]
[68]     0.0    0.00    0.00       3         NameType::NameType() [68]
-----------------------------------------------
                0.00    0.00       1/3           Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       2/3           Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [130]
[69]     0.0    0.00    0.00       3         std::vector<DihedralType, std::allocator<DihedralType> >::operator=(std::vector<DihedralType, std::allocator<DihedralType> > const&) [69]
-----------------------------------------------
                0.00    0.00       1/3           Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       2/3           Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [125]
[70]     0.0    0.00    0.00       3         std::vector<BondType, std::allocator<BondType> >::operator=(std::vector<BondType, std::allocator<BondType> > const&) [70]
-----------------------------------------------
                0.00    0.00       3/3           Parm_Amber::ReadAmberParm(Topology&) [110]
[71]     0.0    0.00    0.00       3         std::vector<NameType, std::allocator<NameType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<NameType*, std::vector<NameType, std::allocator<NameType> > >, unsigned long, NameType const&) [71]
                0.00    0.00    9591/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00       3/3           ArgList::SetList(std::string const&, char const*) [85]
[72]     0.0    0.00    0.00       3         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [72]
-----------------------------------------------
                0.00    0.00       2/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[73]     0.0    0.00    0.00       2         RemoveTrailingWhitespace(std::string&) [73]
-----------------------------------------------
                0.00    0.00       2/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[74]     0.0    0.00    0.00       2         BondIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [74]
-----------------------------------------------
                0.00    0.00       2/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[75]     0.0    0.00    0.00       2         AngleIndexToArray(std::vector<int, std::allocator<int> > const&, int&) [75]
-----------------------------------------------
                0.00    0.00       2/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[76]     0.0    0.00    0.00       2         DihedralIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [76]
                0.00    0.00       2/2           std::vector<DihedralType, std::allocator<DihedralType> >::reserve(unsigned long) [92]
-----------------------------------------------
                0.00    0.00       2/2           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[77]     0.0    0.00    0.00       2         NetcdfFile::GetAttrText(char const*) [77]
-----------------------------------------------
                0.00    0.00       1/2           Traj_AmberNetcdf::openTrajin() [268]
                0.00    0.00       1/2           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[78]     0.0    0.00    0.00       2         NetcdfFile::NC_openRead(std::string const&) [78]
-----------------------------------------------
                0.00    0.00       1/2           NetcdfFile::SetupTime() [108]
                0.00    0.00       1/2           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[79]     0.0    0.00    0.00       2         NetcdfFile::GetNetcdfConventions() [79]
-----------------------------------------------
                0.00    0.00       1/2           Traj_AmberNetcdf::~Traj_AmberNetcdf() [283]
                0.00    0.00       1/2           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[80]     0.0    0.00    0.00       2         NetcdfFile::NC_close() [80]
-----------------------------------------------
                0.00    0.00       2/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[81]     0.0    0.00    0.00       2         Parm_Amber::GetFlagName(Parm_Amber::AmberParmFlagType, int) [81]
                0.00    0.00       2/46          Parm_Amber::PositionFileAtFlag(char const*) [35]
-----------------------------------------------
                0.00    0.00       1/2           Parm_Amber::ID_ParmFormat(CpptrajFile&) [218]
                0.00    0.00       1/2           CpptrajFile::OpenRead(FileName const&) [111]
[82]     0.0    0.00    0.00       2         CpptrajFile::OpenFile(CpptrajFile::AccessType) [82]
                0.00    0.00       2/8           FileIO_Std::Open(char const*, char const*) [52]
-----------------------------------------------
                0.00    0.00       1/2           Parm_Amber::ID_ParmFormat(CpptrajFile&) [218]
                0.00    0.00       1/2           Parm_Amber::ReadParm(FileName const&, Topology&) [231]
[83]     0.0    0.00    0.00       2         CpptrajFile::CloseFile() [83]
                0.00    0.00       2/16          FileIO_Std::Close() [45]
-----------------------------------------------
                0.00    0.00       1/2           Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00       1/2           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[84]     0.0    0.00    0.00       2         Box::operator=(Box const&) [84]
-----------------------------------------------
                0.00    0.00       1/2           ArgList::ArgList(std::string const&) [374]
                0.00    0.00       1/2           ArgList::ArgList(std::string const&, char const*) [123]
[85]     0.0    0.00    0.00       2         ArgList::SetList(std::string const&, char const*) [85]
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [72]
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [95]
-----------------------------------------------
                0.00    0.00       2/2           FileName::FileName(std::string const&) [399]
[86]     0.0    0.00    0.00       2         FileName::SetFileName(std::string const&) [86]
                0.00    0.00       2/2           FileName::SetFileName_NoExpansion(std::string const&) [87]
-----------------------------------------------
                0.00    0.00       2/2           FileName::SetFileName(std::string const&) [86]
[87]     0.0    0.00    0.00       2         FileName::SetFileName_NoExpansion(std::string const&) [87]
-----------------------------------------------
                0.00    0.00       1/2           MaskTokenArray::MaskInfo() const [135]
                0.00    0.00       1/2           Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[88]     0.0    0.00    0.00       2         AtomMask::Nselected() const [88]
-----------------------------------------------
                0.00    0.00       2/2           MaskTokenArray::ParseMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) const [136]
[89]     0.0    0.00    0.00       2         std::_Deque_base<char*, std::allocator<char*> >::_M_initialize_map(unsigned long) [89]
-----------------------------------------------
                0.00    0.00       1/2           Topology::SetNonbondInfo(NonbondParmType const&) [128]
                0.00    0.00       1/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[90]     0.0    0.00    0.00       2         std::vector<NonbondType, std::allocator<NonbondType> >::operator=(std::vector<NonbondType, std::allocator<NonbondType> > const&) [90]
-----------------------------------------------
                0.00    0.00       1/2           Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [125]
                0.00    0.00       1/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[91]     0.0    0.00    0.00       2         std::vector<BondParmType, std::allocator<BondParmType> >::operator=(std::vector<BondParmType, std::allocator<BondParmType> > const&) [91]
-----------------------------------------------
                0.00    0.00       2/2           DihedralIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [76]
[92]     0.0    0.00    0.00       2         std::vector<DihedralType, std::allocator<DihedralType> >::reserve(unsigned long) [92]
-----------------------------------------------
                0.00    0.00       1/2           Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [130]
                0.00    0.00       1/2           Parm_Amber::ReadAmberParm(Topology&) [110]
[93]     0.0    0.00    0.00       2         std::vector<DihedralParmType, std::allocator<DihedralParmType> >::operator=(std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [93]
-----------------------------------------------
                0.00    0.00       2/2           Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [127]
[94]     0.0    0.00    0.00       2         std::vector<AngleType, std::allocator<AngleType> >::operator=(std::vector<AngleType, std::allocator<AngleType> > const&) [94]
-----------------------------------------------
                0.00    0.00       2/2           ArgList::SetList(std::string const&, char const*) [85]
[95]     0.0    0.00    0.00       2         std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [95]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[96]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10Parm_Amber13AMBERPOINTERSE [96]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[97]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7ArgList11emptystringE [97]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[98]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8Topology8LJ_EMPTYE [98]
-----------------------------------------------
                0.00    0.00       1/1           ArgList::getNextInteger(int) [122]
[99]     0.0    0.00    0.00       1         validInteger(std::string const&) [99]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[100]    0.0    0.00    0.00       1         BondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, int&) [100]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[101]    0.0    0.00    0.00       1         NonbondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [101]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[102]    0.0    0.00    0.00       1         NetcdfFile::SetupMultiD(ReplicaDimArray&) [102]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[103]    0.0    0.00    0.00       1         NetcdfFile::SetupFrameDim() [103]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[104]    0.0    0.00    0.00       1         NetcdfFile::SetupCoordsVelo(bool) [104]
                0.00    0.00       1/3           NetcdfFile::GetAttrText(int, char const*) [64]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[105]    0.0    0.00    0.00       1         NetcdfFile::SetupTemperature() [105]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::ID_TrajFormat(CpptrajFile&) [273]
[106]    0.0    0.00    0.00       1         NetcdfFile::GetNetcdfConventions(char const*) [106]
                0.00    0.00       1/3           NetcdfFile::GetAttrText(int, char const*) [64]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[107]    0.0    0.00    0.00       1         NetcdfFile::SetupBox(double*, NetcdfFile::NCTYPE) [107]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[108]    0.0    0.00    0.00       1         NetcdfFile::SetupTime() [108]
                0.00    0.00       1/3           NetcdfFile::GetAttrText(int, char const*) [64]
                0.00    0.00       1/2           NetcdfFile::GetNetcdfConventions() [79]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::Traj_AmberNetcdf() [282]
[109]    0.0    0.00    0.00       1         NetcdfFile::NetcdfFile() [109]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadParm(FileName const&, Topology&) [231]
[110]    0.0    0.00    0.00       1         Parm_Amber::ReadAmberParm(Topology&) [110]
                0.00    0.00   17481/23308       NameType::operator[](int) const [19]
                0.00    0.00   17481/115245      NameType::NameType(NameType const&) [16]
                0.00    0.00    5827/5827        Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double) [27]
                0.00    0.00    5827/5827        Topology::AddTopAtom(Atom const&, Residue const&) [28]
                0.00    0.00      20/20          Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [42]
                0.00    0.00      17/17          Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [44]
                0.00    0.00      13/12222       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
                0.00    0.00       7/46          Parm_Amber::PositionFileAtFlag(char const*) [35]
                0.00    0.00       7/7           std::vector<NameType, std::allocator<NameType> >::operator=(std::vector<NameType, std::allocator<NameType> > const&) [53]
                0.00    0.00       4/38          Parm_Amber::SetFortranType() [38]
                0.00    0.00       4/4           Parm_Amber::GetName(int, int, int) [58]
                0.00    0.00       4/24          std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [40]
                0.00    0.00       3/3           NameType::NameType() [68]
                0.00    0.00       3/3           std::vector<NameType, std::allocator<NameType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<NameType*, std::vector<NameType, std::allocator<NameType> > >, unsigned long, NameType const&) [71]
                0.00    0.00       2/137276      std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [13]
                0.00    0.00       2/2           BondIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [74]
                0.00    0.00       2/2           AngleIndexToArray(std::vector<int, std::allocator<int> > const&, int&) [75]
                0.00    0.00       2/2           DihedralIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [76]
                0.00    0.00       2/119480      FileIO_Std::Gets(char*, int) [14]
                0.00    0.00       2/2           RemoveTrailingWhitespace(std::string&) [73]
                0.00    0.00       2/2           Parm_Amber::GetFlagName(Parm_Amber::AmberParmFlagType, int) [81]
                0.00    0.00       1/5           Box::Box() [56]
                0.00    0.00       1/5           FileName::operator=(FileName const&) [57]
                0.00    0.00       1/1           Topology::SetParmName(std::string const&, FileName const&) [126]
                0.00    0.00       1/1           BondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, int&) [100]
                0.00    0.00       1/1           NonbondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [101]
                0.00    0.00       1/1           Box::SetBetaLengths(double, double, double, double) [116]
                0.00    0.00       1/1           Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [125]
                0.00    0.00       1/1           Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [127]
                0.00    0.00       1/1           std::vector<DihedralParmType, std::allocator<DihedralParmType> >::reserve(unsigned long) [141]
                0.00    0.00       1/1           Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [130]
                0.00    0.00       1/1           Topology::SetNonbondInfo(NonbondParmType const&) [128]
                0.00    0.00       1/1           Topology::SetExtraAtomInfo(int, std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [131]
                0.00    0.00       1/2           Box::operator=(Box const&) [84]
                0.00    0.00       1/3           std::vector<BondType, std::allocator<BondType> >::operator=(std::vector<BondType, std::allocator<BondType> > const&) [70]
                0.00    0.00       1/2           std::vector<BondParmType, std::allocator<BondParmType> >::operator=(std::vector<BondParmType, std::allocator<BondParmType> > const&) [91]
                0.00    0.00       1/3           std::vector<DihedralType, std::allocator<DihedralType> >::operator=(std::vector<DihedralType, std::allocator<DihedralType> > const&) [69]
                0.00    0.00       1/2           std::vector<DihedralParmType, std::allocator<DihedralParmType> >::operator=(std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [93]
                0.00    0.00       1/2           std::vector<NonbondType, std::allocator<NonbondType> >::operator=(std::vector<NonbondType, std::allocator<NonbondType> > const&) [90]
                0.00    0.00       1/1           std::vector<CmapGridType, std::allocator<CmapGridType> >::operator=(std::vector<CmapGridType, std::allocator<CmapGridType> > const&) [139]
                0.00    0.00       1/1           std::vector<CmapType, std::allocator<CmapType> >::operator=(std::vector<CmapType, std::allocator<CmapType> > const&) [142]
                0.00    0.00       1/1           std::vector<AtomExtra, std::allocator<AtomExtra> >::reserve(unsigned long) [144]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::_M_fill_assign(unsigned long, double const&) [148]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadParm(FileName const&, Topology&) [231]
[111]    0.0    0.00    0.00       1         CpptrajFile::OpenRead(FileName const&) [111]
                0.00    0.00       1/3           FileName::clear() [67]
                0.00    0.00       1/3           File::Exists(FileName const&) [66]
                0.00    0.00       1/3           CpptrajFile::ID_Type(char const*) [65]
                0.00    0.00       1/5           FileName::operator=(FileName const&) [57]
                0.00    0.00       1/2           CpptrajFile::OpenFile(CpptrajFile::AccessType) [82]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::Parm_Amber() [235]
[112]    0.0    0.00    0.00       1         CpptrajFile::CpptrajFile() [112]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::~Parm_Amber() [236]
[113]    0.0    0.00    0.00       1         CpptrajFile::~CpptrajFile() [113]
                0.00    0.00       2/6           FileIO_Std::~FileIO_Std() [55]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Init(ArgList&, int) [258]
[114]    0.0    0.00    0.00       1         MaskTokenArray::SetMaskString(std::string const&) [114]
                0.00    0.00       1/1           MaskTokenArray::Tokenize() [115]
-----------------------------------------------
                0.00    0.00       1/1           MaskTokenArray::SetMaskString(std::string const&) [114]
[115]    0.0    0.00    0.00       1         MaskTokenArray::Tokenize() [115]
                0.00    0.00       4/4           std::_Deque_base<char, std::allocator<char> >::_M_initialize_map(unsigned long) [60]
                0.00    0.00       1/19364       NameType::NameType(char const*) [20]
                0.00    0.00       1/1           ArgList::ArgList(std::string const&, char const*) [123]
                0.00    0.00       1/1           MaskToken::SetToken(MaskToken::MaskTokenType, std::string const&) [134]
                0.00    0.00       1/1           std::vector<MaskToken, std::allocator<MaskToken> >::_M_insert_aux(__gnu_cxx::__normal_iterator<MaskToken*, std::vector<MaskToken, std::allocator<MaskToken> > >, MaskToken const&) [146]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[116]    0.0    0.00    0.00       1         Box::SetBetaLengths(double, double, double, double) [116]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[117]    0.0    0.00    0.00       1         Box::Box(double const*) [117]
-----------------------------------------------
                0.00    0.00       1/1           Traj_AmberNetcdf::setupTrajin(FileName const&, Topology*) [270]
[118]    0.0    0.00    0.00       1         Box::Box(Box const&) [118]
-----------------------------------------------
                0.00    0.00       1/1           Topology::Topology() [423]
[119]    0.0    0.00    0.00       1         Frame::Frame() [119]
                0.00    0.00       2/5           Box::Box() [56]
-----------------------------------------------
                0.00    0.00       1/1           Topology::~Topology() [424]
[120]    0.0    0.00    0.00       1         Frame::~Frame() [120]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Init(ArgList&, int) [258]
[121]    0.0    0.00    0.00       1         ArgList::GetMaskNext() [121]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Init(ArgList&, int) [258]
[122]    0.0    0.00    0.00       1         ArgList::getNextInteger(int) [122]
                0.00    0.00       1/1           validInteger(std::string const&) [99]
                0.00    0.00       1/3           convertToInteger(std::string const&) [62]
-----------------------------------------------
                0.00    0.00       1/1           MaskTokenArray::Tokenize() [115]
[123]    0.0    0.00    0.00       1         ArgList::ArgList(std::string const&, char const*) [123]
                0.00    0.00       1/2           ArgList::SetList(std::string const&, char const*) [85]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[124]    0.0    0.00    0.00       1         AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) [124]
                0.00    0.00       9/12222       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
                0.00    0.00       1/1           MaskTokenArray::ParseMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) const [136]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[125]    0.0    0.00    0.00       1         Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [125]
                0.00    0.00     246/12222       std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [23]
                0.00    0.00       2/3           std::vector<BondType, std::allocator<BondType> >::operator=(std::vector<BondType, std::allocator<BondType> > const&) [70]
                0.00    0.00       1/2           std::vector<BondParmType, std::allocator<BondParmType> >::operator=(std::vector<BondParmType, std::allocator<BondParmType> > const&) [91]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[126]    0.0    0.00    0.00       1         Topology::SetParmName(std::string const&, FileName const&) [126]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[127]    0.0    0.00    0.00       1         Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [127]
                0.00    0.00       2/2           std::vector<AngleType, std::allocator<AngleType> >::operator=(std::vector<AngleType, std::allocator<AngleType> > const&) [94]
                0.00    0.00       1/1           std::vector<AngleParmType, std::allocator<AngleParmType> >::operator=(std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [140]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[128]    0.0    0.00    0.00       1         Topology::SetNonbondInfo(NonbondParmType const&) [128]
                0.00    0.00       1/2           std::vector<NonbondType, std::allocator<NonbondType> >::operator=(std::vector<NonbondType, std::allocator<NonbondType> > const&) [90]
                0.00    0.00       1/1           std::vector<HB_ParmType, std::allocator<HB_ParmType> >::operator=(std::vector<HB_ParmType, std::allocator<HB_ParmType> > const&) [138]
-----------------------------------------------
                0.00    0.00       1/1           Topology::CommonSetup() [408]
[129]    0.0    0.00    0.00       1         Topology::SetSolventInfo() [129]
                0.00    0.00    1873/1873        NameType::operator==(char const*) const [29]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[130]    0.0    0.00    0.00       1         Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [130]
                0.00    0.00       2/3           std::vector<DihedralType, std::allocator<DihedralType> >::operator=(std::vector<DihedralType, std::allocator<DihedralType> > const&) [69]
                0.00    0.00       1/2           std::vector<DihedralParmType, std::allocator<DihedralParmType> >::operator=(std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [93]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[131]    0.0    0.00    0.00       1         Topology::SetExtraAtomInfo(int, std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [131]
                0.00    0.00       1/1           std::vector<AtomExtra, std::allocator<AtomExtra> >::operator=(std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [145]
-----------------------------------------------
                0.00    0.00       1/1           Topology::CommonSetup() [408]
[132]    0.0    0.00    0.00       1         Topology::DetermineMolecules() [132]
                0.00    0.00    1870/1870        Topology::VisitAtom(int, int) [30]
                0.00    0.00       1/1           std::vector<Molecule, std::allocator<Molecule> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Molecule*, std::vector<Molecule, std::allocator<Molecule> > >, unsigned long, Molecule const&) [143]
-----------------------------------------------
                0.00    0.00       1/1           Topology::CommonSetup() [408]
[133]    0.0    0.00    0.00       1         Topology::DetermineExcludedAtoms() [133]
                0.00    0.00   23686/23686       Topology::AtomDistance(int, int, int, std::set<int, std::less<int>, std::allocator<int> >&) const [18]
                0.00    0.00    5834/30297       std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&) [17]
                0.00    0.00    5828/5828        std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [24]
                0.00    0.00    5827/5827        Atom::AddExclusionList(std::set<int, std::less<int>, std::allocator<int> > const&) [25]
-----------------------------------------------
                0.00    0.00       1/1           MaskTokenArray::Tokenize() [115]
[134]    0.0    0.00    0.00       1         MaskToken::SetToken(MaskToken::MaskTokenType, std::string const&) [134]
                0.00    0.00       2/3           convertToInteger(std::string const&) [62]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[135]    0.0    0.00    0.00       1         MaskTokenArray::MaskInfo() const [135]
                0.00    0.00       1/2           AtomMask::Nselected() const [88]
-----------------------------------------------
                0.00    0.00       1/1           AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) [124]
[136]    0.0    0.00    0.00       1         MaskTokenArray::ParseMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) const [136]
                0.00    0.00       2/2           std::_Deque_base<char*, std::allocator<char*> >::_M_initialize_map(unsigned long) [89]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[137]    0.0    0.00    0.00       1         Topology::SetupIntegerMask(AtomMask&) const [137]
-----------------------------------------------
                0.00    0.00       1/1           Topology::SetNonbondInfo(NonbondParmType const&) [128]
[138]    0.0    0.00    0.00       1         std::vector<HB_ParmType, std::allocator<HB_ParmType> >::operator=(std::vector<HB_ParmType, std::allocator<HB_ParmType> > const&) [138]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[139]    0.0    0.00    0.00       1         std::vector<CmapGridType, std::allocator<CmapGridType> >::operator=(std::vector<CmapGridType, std::allocator<CmapGridType> > const&) [139]
-----------------------------------------------
                0.00    0.00       1/1           Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [127]
[140]    0.0    0.00    0.00       1         std::vector<AngleParmType, std::allocator<AngleParmType> >::operator=(std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [140]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[141]    0.0    0.00    0.00       1         std::vector<DihedralParmType, std::allocator<DihedralParmType> >::reserve(unsigned long) [141]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[142]    0.0    0.00    0.00       1         std::vector<CmapType, std::allocator<CmapType> >::operator=(std::vector<CmapType, std::allocator<CmapType> > const&) [142]
-----------------------------------------------
                0.00    0.00       1/1           Topology::DetermineMolecules() [132]
[143]    0.0    0.00    0.00       1         std::vector<Molecule, std::allocator<Molecule> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Molecule*, std::vector<Molecule, std::allocator<Molecule> > >, unsigned long, Molecule const&) [143]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[144]    0.0    0.00    0.00       1         std::vector<AtomExtra, std::allocator<AtomExtra> >::reserve(unsigned long) [144]
-----------------------------------------------
                0.00    0.00       1/1           Topology::SetExtraAtomInfo(int, std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [131]
[145]    0.0    0.00    0.00       1         std::vector<AtomExtra, std::allocator<AtomExtra> >::operator=(std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [145]
                0.00    0.00    5827/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00       1/1           MaskTokenArray::Tokenize() [115]
[146]    0.0    0.00    0.00       1         std::vector<MaskToken, std::allocator<MaskToken> >::_M_insert_aux(__gnu_cxx::__normal_iterator<MaskToken*, std::vector<MaskToken, std::allocator<MaskToken> > >, MaskToken const&) [146]
                0.00    0.00       1/115245      NameType::NameType(NameType const&) [16]
-----------------------------------------------
                0.00    0.00       1/1           Action_Closest::Setup(Topology const&, CoordinateInfo const&) [4]
[147]    0.0    0.00    0.00       1         std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, unsigned long, Action_Closest::MolDist const&) [147]
-----------------------------------------------
                0.00    0.00       1/1           Parm_Amber::ReadAmberParm(Topology&) [110]
[148]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::_M_fill_assign(unsigned long, double const&) [148]
-----------------------------------------------
                0.00    0.00       1/1           Frame::SetupFrameV(std::vector<Atom, std::allocator<Atom> > const&, CoordinateInfo const&) [315]
[149]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [149]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [96] _GLOBAL__sub_I__ZN10Parm_Amber13AMBERPOINTERSE [65] CpptrajFile::ID_Type(char const*) [30] Topology::VisitAtom(int, int)
  [97] _GLOBAL__sub_I__ZN7ArgList11emptystringE [82] CpptrajFile::OpenFile(CpptrajFile::AccessType) [134] MaskToken::SetToken(MaskToken::MaskTokenType, std::string const&)
  [98] _GLOBAL__sub_I__ZN8Topology8LJ_EMPTYE [111] CpptrajFile::OpenRead(FileName const&) [135] MaskTokenArray::MaskInfo() const
  [99] validInteger(std::string const&) [83] CpptrajFile::CloseFile() [136] MaskTokenArray::ParseMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) const
  [62] convertToInteger(std::string const&) [112] CpptrajFile::CpptrajFile() [51] Box::ToRecip(Matrix_3x3&, Matrix_3x3&) const
   [3] DIST2_ImageNonOrtho(Vec3 const&, Vec3 const&, Matrix_3x3 const&, Matrix_3x3 const&) [113] CpptrajFile::~CpptrajFile() [88] AtomMask::Nselected() const
  [73] RemoveTrailingWhitespace(std::string&) [2] Action_Closest::Action_ImageNonOrtho(Frame&, double, Matrix_3x3, Matrix_3x3) [29] NameType::operator==(char const*) const
  [34] mprintf(char const*, ...) [4] Action_Closest::Setup(Topology const&, CoordinateInfo const&) [19] NameType::operator[](int) const
 [100] BondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, int&) [114] MaskTokenArray::SetMaskString(std::string const&) [18] Topology::AtomDistance(int, int, int, std::set<int, std::less<int>, std::allocator<int> >&) const
  [74] BondIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [115] MaskTokenArray::Tokenize() [137] Topology::SetupIntegerMask(AtomMask&) const
  [75] AngleIndexToArray(std::vector<int, std::allocator<int> > const&, int&) [116] Box::SetBetaLengths(double, double, double, double) [89] std::_Deque_base<char*, std::allocator<char*> >::_M_initialize_map(unsigned long)
 [101] NonbondParmToArray(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&) [117] Box::Box(double const*) [60] std::_Deque_base<char, std::allocator<char> >::_M_initialize_map(unsigned long)
  [76] DihedralIndexToArray(std::vector<int, std::allocator<int> > const&, bool, int&) [118] Box::Box(Box const&) [138] std::vector<HB_ParmType, std::allocator<HB_ParmType> >::operator=(std::vector<HB_ParmType, std::allocator<HB_ParmType> > const&)
  [14] FileIO_Std::Gets(char*, int) [56] Box::Box()       [90] std::vector<NonbondType, std::allocator<NonbondType> >::operator=(std::vector<NonbondType, std::allocator<NonbondType> > const&)
  [52] FileIO_Std::Open(char const*, char const*) [84] Box::operator=(Box const&) [91] std::vector<BondParmType, std::allocator<BondParmType> >::operator=(std::vector<BondParmType, std::allocator<BondParmType> > const&)
  [36] FileIO_Std::Read(void*, unsigned long) [25] Atom::AddExclusionList(std::set<int, std::less<int>, std::allocator<int> > const&) [139] std::vector<CmapGridType, std::allocator<CmapGridType> >::operator=(std::vector<CmapGridType, std::allocator<CmapGridType> > const&)
  [63] FileIO_Std::Size(char const*) [26] Atom::SetElementFromMass() [92] std::vector<DihedralType, std::allocator<DihedralType> >::reserve(unsigned long)
  [45] FileIO_Std::Close()    [21] Atom::Atom(Atom const&) [69] std::vector<DihedralType, std::allocator<DihedralType> >::operator=(std::vector<DihedralType, std::allocator<DihedralType> > const&)
  [49] FileIO_Std::Rewind()   [27] Atom::Atom(NameType const&, double, double, int, double, int, NameType const&, double, double) [140] std::vector<AngleParmType, std::allocator<AngleParmType> >::operator=(std::vector<AngleParmType, std::allocator<AngleParmType> > const&)
  [54] FileIO_Std::FileIO_Std() [22] Atom::~Atom()       [141] std::vector<DihedralParmType, std::allocator<DihedralParmType> >::reserve(unsigned long)
  [55] FileIO_Std::~FileIO_Std() [66] File::Exists(FileName const&) [93] std::vector<DihedralParmType, std::allocator<DihedralParmType> >::operator=(std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&)
  [41] Matrix_3x3::Matrix_3x3(Matrix_3x3 const&) [119] Frame::Frame() [47] std::vector<Atom, std::allocator<Atom> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Atom*, std::vector<Atom, std::allocator<Atom> > >, Atom const&)
  [37] NetcdfFile::checkNCerr(int) [120] Frame::~Frame()  [48] std::vector<Residue, std::allocator<Residue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<Residue*, std::vector<Residue, std::allocator<Residue> > >, Residue const&)
  [77] NetcdfFile::GetAttrText(char const*) [121] ArgList::GetMaskNext() [70] std::vector<BondType, std::allocator<BondType> >::operator=(std::vector<BondType, std::allocator<BondType> > const&)
  [64] NetcdfFile::GetAttrText(int, char const*) [122] ArgList::getNextInteger(int) [142] std::vector<CmapType, std::allocator<CmapType> >::operator=(std::vector<CmapType, std::allocator<CmapType> > const&)
  [78] NetcdfFile::NC_openRead(std::string const&) [59] ArgList::hasKey(char const*) [143] std::vector<Molecule, std::allocator<Molecule> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Molecule*, std::vector<Molecule, std::allocator<Molecule> > >, unsigned long, Molecule const&)
 [102] NetcdfFile::SetupMultiD(ReplicaDimArray&) [85] ArgList::SetList(std::string const&, char const*) [71] std::vector<NameType, std::allocator<NameType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<NameType*, std::vector<NameType, std::allocator<NameType> > >, unsigned long, NameType const&)
  [50] NetcdfFile::FloatToDouble(double*, float const*) [123] ArgList::ArgList(std::string const&, char const*) [61] std::vector<NameType, std::allocator<NameType> >::reserve(unsigned long)
 [103] NetcdfFile::SetupFrameDim() [31] AtomMask::AddAtomRange(int, int) [53] std::vector<NameType, std::allocator<NameType> >::operator=(std::vector<NameType, std::allocator<NameType> > const&)
 [104] NetcdfFile::SetupCoordsVelo(bool) [124] AtomMask::SetupMask(std::vector<Atom, std::allocator<Atom> > const&, std::vector<Residue, std::allocator<Residue> > const&, double const*) [94] std::vector<AngleType, std::allocator<AngleType> >::operator=(std::vector<AngleType, std::allocator<AngleType> > const&)
 [105] NetcdfFile::SetupTemperature() [86] FileName::SetFileName(std::string const&) [144] std::vector<AtomExtra, std::allocator<AtomExtra> >::reserve(unsigned long)
 [106] NetcdfFile::GetNetcdfConventions(char const*) [87] FileName::SetFileName_NoExpansion(std::string const&) [145] std::vector<AtomExtra, std::allocator<AtomExtra> >::operator=(std::vector<AtomExtra, std::allocator<AtomExtra> > const&)
  [79] NetcdfFile::GetNetcdfConventions() [67] FileName::clear() [146] std::vector<MaskToken, std::allocator<MaskToken> >::_M_insert_aux(__gnu_cxx::__normal_iterator<MaskToken*, std::vector<MaskToken, std::allocator<MaskToken> > >, MaskToken const&)
  [80] NetcdfFile::NC_close() [57] FileName::operator=(FileName const&) [15] std::vector<MaskToken, std::allocator<MaskToken> >::operator=(std::vector<MaskToken, std::allocator<MaskToken> > const&)
 [107] NetcdfFile::SetupBox(double*, NetcdfFile::NCTYPE) [20] NameType::NameType(char const*) [147] std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> >::_M_fill_insert(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, unsigned long, Action_Closest::MolDist const&)
 [108] NetcdfFile::SetupTime() [68] NameType::NameType()  [72] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 [109] NetcdfFile::NetcdfFile() [16] NameType::NameType(NameType const&) [95] std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
  [46] Parm_Amber::GetInteger(int, int, int) [28] Topology::AddTopAtom(Atom const&, Residue const&) [148] std::vector<double, std::allocator<double> >::_M_fill_assign(unsigned long, double const&)
  [81] Parm_Amber::GetFlagName(Parm_Amber::AmberParmFlagType, int) [125] Topology::SetBondInfo(std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondType, std::allocator<BondType> > const&, std::vector<BondParmType, std::allocator<BondParmType> > const&) [149] std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&)
  [42] Parm_Amber::GetFlagDouble(Parm_Amber::AmberParmFlagType, int) [126] Topology::SetParmName(std::string const&, FileName const&) [40] std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
 [110] Parm_Amber::ReadAmberParm(Topology&) [127] Topology::SetAngleInfo(std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleType, std::allocator<AngleType> > const&, std::vector<AngleParmType, std::allocator<AngleParmType> > const&) [23] std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [44] Parm_Amber::GetFlagInteger(Parm_Amber::AmberParmFlagType, int) [128] Topology::SetNonbondInfo(NonbondParmType const&) [13] std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  [38] Parm_Amber::SetFortranType() [129] Topology::SetSolventInfo() [17] std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&)
  [39] Parm_Amber::AllocateAndRead(int, int, int) [130] Topology::SetDihedralInfo(std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralType, std::allocator<DihedralType> > const&, std::vector<DihedralParmType, std::allocator<DihedralParmType> > const&) [24] std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
  [35] Parm_Amber::PositionFileAtFlag(char const*) [131] Topology::SetExtraAtomInfo(int, std::vector<AtomExtra, std::allocator<AtomExtra> > const&) [33] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, Action_Closest::MolDist, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, long, long, Action_Closest::MolDist, Action_Closest::moldist_cmp)
  [58] Parm_Amber::GetName(int, int, int) [132] Topology::DetermineMolecules() [5] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp>(__gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, __gnu_cxx::__normal_iterator<Action_Closest::MolDist*, std::vector<Action_Closest::MolDist, std::allocator<Action_Closest::MolDist> > >, Action_Closest::moldist_cmp)
  [43] Parm_Amber::GetDouble(int, int, int) [133] Topology::DetermineExcludedAtoms() [32] void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long)
